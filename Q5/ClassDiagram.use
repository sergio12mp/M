model Q5
--------------------------
-----Clases-----
class Person
attributes
    birthYear:Integer
    deathYear:Integer
    age:Integer
    isDead:Boolean
end

class Marriage
attributes
    startYear:Integer
    endYear:Integer
end

class Clock
attributes
    NOW:Integer
    started:Boolean
end

class Community
attributes
    youngAge:Integer
    adultAge:Integer
    oldAge:Integer
end

-----Clases de Asociaci√≥n-------

-----Agregacion----

aggregation IsCommunity between
    Community[0..*] role community
    Clock[1] role clock
    
end

-----Composicion----
composition PerteneceAComunidad between
    Community[1] role community
    Person[0..*] role person
end
-----Asociaciones-----

association Mujer between
    Person [1] role wife
    Marriage [0..*] role husband
end
association Marido between
    Person [1] role husband
    Marriage [0..*] role wife
end


-----Constraints----
constraints

context Person
inv NoMorirAntesDeNacer:
    self.birthYear < self.deathYear

inv NoNacerEnFuturo:
    self.community.clock.NOW >= self.birthYear


inv NoCasadoConUnoMismo:
    self.husband->forAll(m | m.husband <>self) and self.wife->forAll(m | m.wife <> self)


context Marriage
inv NoDivorcioAntesDeCasamiento:
    self.startYear<self.endYear

inv NoDivorcioSiNoEstasCasado:
    self.startYear = null implies self.endYear = null




context Clock
inv SoloUnReloj:
    Clock.allInstances()->size() <=1
